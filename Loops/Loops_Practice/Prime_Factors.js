// Task 'Prime Factors'                                                   // Условие: Да се напише програма, която намира простите делители (prime factors) на дадено непростo число N.
let input = [
    '12',
];

let print = this.print || console.log;
let gets = this.gets || ((arr, index) => () => arr[index++])(input, 0);

// Read the input from the system
let n = +gets();                                                          // Прочитаме числото от входа и го преобразуваме в число:n = 12
let divisor = 2;                                                          // Започваме деленето от първото просто число – 2, защото това е най-малкият възможен prime factor.
// Process the data

while (n > 1) {                                                           // Ще обхождаме, докато n стане 1 (когато стане 1, значи сме "разложили" числото докрай)
    if (n % divisor === 0) {                                              // Проверяваме: Може ли n да се раздели на divisor без остатък? ➜ Ако да → значи divisor е prime factor
        print(divisor);                                                   // Отпечатваме делителя (prime factor),
        n /= divisor;                                                     // и след това намаляваме n, като го разделим на divisor. Така ще можем да продължим с същия делител, ако се повтаря
    } else {                                                            // Ако divisor не дели n, тогава:
        divisor++; // Move to the next possible divisor                 // Увеличаваме divisor с 1 и преминаваме към следващото потенциално просто число
    }
}

// Какво се иска в задачата (обяснение на условието): Да се напише програма, която намира простите делители (prime factors) на дадено непростo число N.Тоест:
// Ще ти дадат едно число N (гарантирано не е просто, напр. 12, 100). Ти трябва да **разложиш N само на прости множители и да ги отпечаташ всеки на отделен ред, в нарастващ ред

// Какво се случва при n = 12:
// Стъпка	n	divisor	n % divisor	Действие	                     Изход
// 1	    12	2	    0	        Делим, отпечатваме 2 → n = 6	 2
// 2	    6	2	    0	        Делим, отпечатваме 2 → n = 3	 2
// 3	    3	2	    1	        ↑ Прескачаме, divisor = 3
// 4	    3	3	    0	        Делим, отпечатваме 3 → n = 1	 3
// Цикълът спира (защото n = 1).

// Простите числа са числа, които се делят само на две числа: на 1 и на себе си. Например първите 5 прости числа са 2, 3, 5, 7 и 11. Числата, които имат повече от два делителя се наричат съставни числа.
// https://bg.khanacademy.org/math/5-klas/x840ca9d7401a4089:delimost/x840ca9d7401a4089:proizvedenie-na-prosti-mnozhiteli/v/prime-numbers

// Kакво са prime factors:Prime factors (прости множители) са простите числа, които умножени помежду си дават дадено число.
// С други думи:Всеки съставен (непрост) брой може да бъде разложен на произведение от прости числа.
// Пример:Числото 12 е непростo, защото има делители: 1, 2, 3, 4, 6, 12. Нека го разложим на prime factors:
// 12 = 2 × 2 × 3 → това са **само прости числа**  Значи prime factors на 12 са: 2, 2, 3
// Prime number: Число, което се дели само на 1 и на себе си
// Composite number: Число, което има повече от два делителя (≠ prime)
// Prime factors: Простите числа, които умножени помежду си дават дадено съставно число
// Само съставни (non-prime) числа имат повече от 1 prime factor
// Простите числа имат само един prime factor – самите себе си

// Write a program that finds the prime factors of a given non-prime number. List the factors in ascending order.
// 12 = 2 * 2 * 3
// 100 = 2 * 2 * 5 * 5
// Input
// On the first line you will receive one number - N
// Output
// Output each prime factor on a newline.
// Constraints
// 4 <= N <= 1000
// N is guaranteed to not be a prime
// Input
// 12
// Output
// 2
// 2
// 3