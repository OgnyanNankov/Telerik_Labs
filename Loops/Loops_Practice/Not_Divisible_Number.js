// Task 'Not Divisivle Number'                                                    // Да се отпечатат всички числа от 1 до n, които не се делят нито на 3, нито на 7, на един ред, разделени с интервал.
let input = [
    '10',
];

let print = this.print || console.log;
let gets = this.gets || ((arr, index) => () => arr[index++])(input, 0);

// Read the input from the system
let n = +gets();                                                                 // Прочитаме първия ред от входа ('10'). n = 10 → числата, които ще обработим, са от 1 до 10



// Process the data
let result = '';                                                                 // Създаваме променлива result, която ще използваме за натрупване на валидните числа, които ще отпечатаме по-късно.

for (let i = 0; i <= n; i++) {                                                   // Стартираме цикъл от 0 до n включително (тук i = 0 → 10). Забележка: по условие трябва да отпечатаме числата от 1 до n, така че i = 1 би било по-точно начало.

    if (i % 3 === 0 || i % 7 === 0)                                              // Проверяваме дали текущото число се дели на 3 или на 7: 
        continue;                                                                // Ако е вярно – continue прескача текущата итерация (числото не се добавя към result). Това гарантира, че в result попадат само числата, които НЕ се делят на 3 или 7.
    result += i + ' ';                                                           // Добавяме текущото число i, плюс един интервал, към низa result. Това ще изгради стринг от валидните числа, разделени с интервали.
}

print(result);


// 1. Защо броим с i, а не с n във for loop-a?
// if (n % 3 === 0 && n % 7 === 0) -- Проблемът тук е, че използваме n в условието, но n е само едно число – последното в диапазона.
// Така проверката винаги гледа само дали входното n се дели на 3 и 7, вместо да проверява всяко число в цикъла.
// Как трябва да е: if (i % 3 === 0 || i % 7 === 0) Тук i е всяко число от 1 до n, което обхождаме в цикъла. Именно i трябва да проверим, дали се дели на 3 или на 7 – не n.
// Обобщено: n = граница (например 10), i = числата от 1 до n, които искаме да проверим. Затова проверяваме i, а не n.

// 2. Защо трябва да използваме || (логическо ИЛИ), а не && (логическо И)?
// if (i % 3 === 0 && i % 7 === 0) continue; - Това ще прескочи само числата, които се делят ЕДНОВРЕМЕННО на 3 и на 7, т.е. само кратните на 21 (3 × 7). Пример: 21, 42, 63…
// Но задачата иска да прескочим ВСИЧКИ, които се делят или на 3, или на 7.
// Правилният вариант: Това означава: ако i се дели на 3 ИЛИ на 7 – пропусни го. Точно както се казва в условието: „not divisible by 3 or 7“

// Description
// Write a program that reads from the console a positive integer N and prints all the numbers from 1 to N not divisible by 3 or 7, on a single line, separated by a space.
// Input: Will always consists of one valid integer number - the number N.
// Output: Should always consists of the numbers from 1 to N, which are not divisible by 3 or 7, separated by a whitespace.
// Constraints
// 1 < N < 1500
// Sample tests
// Input	Output
// 10	1 2 4 5 8 10