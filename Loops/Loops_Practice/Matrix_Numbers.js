// Task 'Matrix Numbers'                                                 // Отпечатване на числова матрица На всеки нов ред от екрана да има числа, разделени с интервали. Общият брой редове и колони да е равен на N
let input = [
    '2',                                                                 
];

let print = this.print || console.log;
let gets = this.gets || ((arr, index) => () => arr[index++])(input, 0);

// Read the input from the system
let n = +gets();

// Process the data 
for (let i = 1; i <= n; i++) {                                           // Външен цикъл – обхожда всеки ред от матрицата. i е номерът на текущия ред (започва от 1). Ще се изпълни точно n пъти → т.е. 2 реда 
    let str = '';                                                        // Създаваме нов празен низ (string) за всеки ред. Тук ще натрупваме числата за текущия ред, преди да ги отпечатаме

    for (let j = 1; j <= n; j++) {                                       // Вътрешен цикъл – обхожда всяка колона в реда. Ще се изпълни n пъти за всеки ред
        str += (i + j - 1) + ' ';                                        // Изчисляваме текущото число в реда: Формулата i + j - 1 осигурява постепенно нарастване. Добавяме и интервал, за да ги разделим. Виж коментар 1:
    }

    print(str.trim());                                                   // .trim() премахва последния излишен интервал
}


// Коментар 1:пример със n = 2, представен с таблица за стойностите на i, j, и резултата от формулата i + j - 1
// i	j	 i + j - 1
// 1	1	 1
// 1	2	 2
// → резултат: '1 2 ' (→ след trim() → 1 2)		
// i	j	 i + j - 1
// 2	1	 2
// 2	2	 3
// → резултат: '2 3 ' (→ след trim() → 2 3)		

// Коментар 2: Формулата i + j - 1 се използва често в програмирането при изграждане на моделирани числови матрици, таблици и редове от последователности. 
// Тази формула дава поредица от последователни числа, като:Първото число в реда е i и всяко следващо число се увеличава с 1. 
// Така получаваме: Първи ред (i = 1): 1, 2, 3, ... Втори ред (i = 2): 2, 3, 4, ... Логиката зад формулата:
// Формулата просто казва:Започни от i и за всяка следваща позиция добавяй (j - 1). Така получаваш:
// i + 0  → когато j = 1
// i + 1  → когато j = 2
// i + 2  → когато j = 3
// Тоест: стойност = ред + (колона − 1), което се свежда до: i + j - 1
//  Кога я използваш: Когато искаш всеки ред да започва с различна стойност и стойностите да се увеличават последователно. В програмирането: 
// За изграждане на таблици с поредици, запълване на матрици по редове, задачи с вложени цикли
// Запомни: i + j - 1 е универсален трик за генериране на подредени числови редове в матрица, където: i = текущ ред, j = текуща колона

// Коментар 3: Какво е числова матрица?
// Матрица е просто подредена таблица от числа, подредена в: редове (хоризонтално) и колони (вертикално). 
// Можеш да си я представиш като: Таблица в Excel, само че с числа, или като двумерен масив (array) в програмирането
// Пример: Матрица 3 × 3 (3 реда, 3 колони)
// 1 2 3
// 4 5 6
// 7 8 9
// Има 3 реда
// Има 3 колони
// Общо 9 числа
// Повече детайли тук: https://bg.khanacademy.org/math/multivariable-calculus/thinking-about-multivariable-function/x786f2022:vectors-and-matrices/a/matrices--intro-mvc

// Write a program that reads from the console a positive integer number N and prints a matrix like in the examples below. Use two nested loops.
// Input
// The input will always consist of a single line, which contains the number N
// Output
// See the examples
// Input
// 2
// Output
// 1 2
// 2 3